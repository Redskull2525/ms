Q1]
A]

import matplotlib.pyplot as plt
 import numpy as np
 x=np.linspace(-1,1)
 f=x**2
 g=x**3
 plt.plot(x,f)
 plt.plot(x,g)
 plt.xlabel('x-axis')
 plt.ylabel('y-axis')
 plt.title('Graph of $ f(x)=x^2 $ and $g(x)=x^3 $')
 plt.show()

 B]

  from pylab import*
 import numpy as np
 def f(x,y):
    return x**2+y**2
 x=np.linspace(-6,6,30)
 y=np.linspace(-6,6,30)
 X,Y=np.meshgrid(x,y)
 Z=f(X,Y)
 ax=axes(projection='3d')
 ax.plot_surface(X,Y,Z)
 xlabel('x-axis')
 ylabel('y-axis')
 title('Surface Plot')
 show()

C]

 import matplotlib.pyplot as plt
 import numpy as np
 x=np.linspace(10,20)
 a=np.cos(2*x)
 b=np.sin(2*x)
 c=x
 plt.plot(x,a,'red')
 plt.plot(x,b,'red')
 plt.plot(x,c,'red')
 plt.xlabel('x-axis')
 plt.ylabel('y-axis')
 plt.show()

 Q2]
 A]

  A=Point(1,0)
 B=Point(2,-1)
 C=Point(-1,3)
 T=Triangle(A,B,C)
 x,y=symbols('x,y')
 T.reflect(Line(0+y-3))

 B]

  A=Point(0,0)
 B=Point(5,0)
 C=Point(3,3)
 T=Triangle(A,B,C)
 T.area

  T.perimeter

  C]

   P=Point(5,2)
 Q=Point(5,-2)
 R=Point(5,0)
 Point.is_collinear(P,Q,R)

  R=Ray(P,Q)

   R.length

    R.slope

Q3]
A]
i]
 from pulp import*
 model=LpProblem(name='Lp-Problem',sense=LpMaximize)
 x=LpVariable(name='x',lowBound=0)
 y=LpVariable(name='y',lowBound=0)
 model+=(x+y<=7)
 model+=(2*x+5*y<=1)
 model+=5*x+3*y
 model

model.solve() 

model.objective.value()

x.value()

y.value()

ii]

 from pulp import*
 model=LpProblem(name='Lp-Problem',sense=LpMaximize)
 x=LpVariable(name='x',lowBound=0)
 y=LpVariable(name='y',lowBound=0)
 z=LpVariable(name='z',lowBound=0)
 model+=(x+2*y+z<=430)
 model+=(3*x+4*z<=460)
 model+=(x+4*y<=120)
 model+=3*x+2*y+5*z
 model

model.solve() 

model.objective.value()

x.value()

y.value()

z.value()

B]
i]

P=Point(-2,4)

P.transform(Matrix([[1,0,0],[7,1,0],[0,0,1]]))

P.scale(7/2,7)

P.rotate(pi/3)

ii]

 from pylab import*
 x1=[5,7,6,5]
 y1=[4,4,6,4]
 plt.plot(x1,y1,'black')
 plt.fill(x1,y1,'green')
 x2=[2,10,10,2,2]
 y2=[2,2,8,8,2]
 plt.plot(x2,y2,'black')
 plt.fill(x2,y2,'blue')
 x3=[6,10,8,4,2,6]
 y3=[2,4,7,8,4,2]
 plt.plot(x3,y3,'black')
 plt.fill(x3,y3,'red')
 x4=[0,4,2,0]
 y4=[0,0,4,0]
 plt.plot(x4,y4,'black')
 plt.fill(x4,y4,'grey')
 plt.show()